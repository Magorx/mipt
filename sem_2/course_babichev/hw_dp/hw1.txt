1.
Ясно, что двигаться мы будем отрезками, а не кривыми. Чтобы соответствовать асимптотике, сделаем дп по маскам.
dp[mask] - ответ для предметов, для которых в маске стоят единички.
Соответственно делаем цикл по mask: по i: по j:
Если в маске предметы i и j не присутствуют, то обновим mask & (i) & (j) вперед. (x) - бит, относящийся к предмету х.
Храним родителей, чтобы восстанавливать ответ. Итого O(2^n * n^2)

2. Обыкновенный рюкзак возьмем и побьем на блоки по корень из n. Такие подзадачи мы уже умеем решать, используя W*sqrt(n) памяти (родителей храним в массиве длины W, из него мы тоже умеем восстанавливать ответ). Но, по факту, мы можем использовать последний столбец прошлого корневого куска как первую строчку для нового! Значит в итоге мы решим задачу фактически не придумав ничего нового, но сэкономив память до O(W*sqrt(n)).